title:70 Flappy Bird - Python
tags: Python

```Python
import pygame
import random

# Screen size
WIDTH = 600
HEIGHT = 800

# Colors
BACKGROUND_COLOR = (255, 255, 255)
BIRD_COLOR = (255, 0, 0)
PIPE_COLOR = (0, 255, 0)

# Bird properties
BIRD_RADIUS = 20
BIRD_X = 100
BIRD_Y = HEIGHT // 2
BIRD_SPEED = 5

# Pipe properties
PIPE_WIDTH = 80
PIPE_HEIGHT = 400
PIPE_GAP = 200
PIPE_SPEED = 3

# Pipe class
class Pipe:
    def __init__(self, x):
        self.x = x
        self.height = random.randint(100, HEIGHT - PIPE_GAP - 100)
        self.top = self.height - PIPE_HEIGHT
        self.bottom = self.height + PIPE_GAP

    def move(self):
        self.x -= PIPE_SPEED

    def offscreen(self):
        return self.x <= -PIPE_WIDTH

    def intersects(self, bird):
        if bird.y - BIRD_RADIUS < self.top or bird.y + BIRD_RADIUS > self.bottom:
            if bird.x + BIRD_RADIUS > self.x and bird.x - BIRD_RADIUS < self.x + PIPE_WIDTH:
                return True
        return False

# Bird class
class Bird:
    def __init__(self):
        self.x = BIRD_X
        self.y = BIRD_Y
        self.dy = 0

    def gravity(self):
        self.dy += 0.5
        self.y += self.dy

    def jump(self):
        self.dy = -10

    def draw(self, screen):
        pygame.draw.circle(screen, BIRD_COLOR, (int(self.x), int(self.y)), BIRD_RADIUS)

# Game function
def game():
    pygame.init()
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    pygame.display.set_caption('Flappy Bird Clone')

    bird = Bird()
    pipes = [Pipe(WIDTH + i * PIPE_GAP) for i in range(3)]
    score = 0

    clock = pygame.time.Clock()

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    bird.jump()

        bird.gravity()
        screen.fill(BACKGROUND_COLOR)
        bird.draw(screen)

        for pipe in pipes:
            pipe.move()
            if pipe.offscreen():
                pipes.remove(pipe)
                pipes.append(Pipe(WIDTH))

            if pipe.intersects(bird):
                running = False

            pygame.draw.rect(screen, PIPE_COLOR, (pipe.x, pipe.top, PIPE_WIDTH, PIPE_HEIGHT))
            pygame.draw.rect(screen, PIPE_COLOR, (pipe.x, pipe.bottom, PIPE_WIDTH, HEIGHT - pipe.bottom))

        if bird.y > HEIGHT or bird.y < 0:
            running = False

        pygame.display.update()
        clock.tick(30)

    pygame.quit()

game()
```